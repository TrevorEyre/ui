const path = require('path')
const { readdir, stat, writeFile } = require('fs').promises

const paths = {
  src: path.resolve(__dirname, '..', 'src'),
  util: path.resolve(__dirname, '..', 'src', 'util'),
}

// Traverses all directories and subdirectories, and returns an array of file
// paths. Use regexFilter to filter files by name, extension, etc.
const getFiles = async (dir, regexFilter) => {
  const subdirs = await readdir(dir)
  const files = await Promise.all(
    subdirs.map(async subdir => {
      const res = path.resolve(dir, subdir)
      return (await stat(res)).isDirectory() ? getFiles(res, regexFilter) : res
    })
  )

  return Array.prototype.concat(...files).filter(file => {
    return regexFilter ? regexFilter.test(file) : file
  })
}

// Takes an array of file paths, and maps to relative path and import name
const getImports = (files, extension) => {
  return files.map(file => ({
    path: file.replace(paths.src, '.'),
    name: path.basename(file, extension),
  }))
}

const getIndexFileContent = (components, utils) => `\
// THIS FILE IS AUTOMATICALLY GENERATED
${components
  .map(component => `import ${component.name} from '${component.path}'`)
  .join('\n')}
${utils.map(util => `import * as ${util.name} from '${util.path}'`).join('\n')}

// Install components globally
const install = Vue => {
${components
  .map(component => `  Vue.component('${component.name}', ${component.name})`)
  .join('\n')}
}

// Export library as a plugin, and individual components
export default { install }
export {
  ${components.map(component => component.name).join(',\n  ')},
  ${utils.map(util => util.name).join(',\n  ')},
}
`

const getIndexFile = async () => {
  const vueFiles = await getFiles(paths.src, /\.vue$/)
  const utilFiles = await getFiles(paths.util)
  const vueImports = getImports(vueFiles, '.vue')
  const utilImports = getImports(utilFiles, '.js')

  const indexFile = getIndexFileContent(vueImports, utilImports)
  return indexFile
}

getIndexFile().then(indexFile => {
  writeFile(path.resolve(paths.src, 'index.js'), indexFile)
})
